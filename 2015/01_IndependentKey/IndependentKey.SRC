; .\IndependentKey.SRC generated from: IndependentKey.c
; COMPILER INVOKED BY:
;        E:\keil\C51\BIN\C51.EXE IndependentKey.c BROWSE DEBUG OBJECTEXTEND SRC(.\IndependentKey.SRC)

$NOMOD51

NAME	INDEPENDENTKEY

P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
AC	BIT	0D0H.6
T0	BIT	0B0H.4
T1	BIT	0B0H.5
EA	BIT	0A8H.7
T2	BIT	090H.0
IE	DATA	0A8H
P0_0	BIT	080H.0
P1_0	BIT	090H.0
P0_1	BIT	080H.1
P2_0	BIT	0A0H.0
P1_1	BIT	090H.1
P0_2	BIT	080H.2
P3_0	BIT	0B0H.0
P2_1	BIT	0A0H.1
P1_2	BIT	090H.2
P0_3	BIT	080H.3
P3_1	BIT	0B0H.1
P2_2	BIT	0A0H.2
P1_3	BIT	090H.3
P0_4	BIT	080H.4
P3_2	BIT	0B0H.2
P2_3	BIT	0A0H.3
P1_4	BIT	090H.4
P0_5	BIT	080H.5
EXF2	BIT	0C8H.6
RD	BIT	0B0H.7
P3_3	BIT	0B0H.3
P2_4	BIT	0A0H.4
P1_5	BIT	090H.5
P0_6	BIT	080H.6
P3_4	BIT	0B0H.4
P2_5	BIT	0A0H.5
P1_6	BIT	090H.6
P0_7	BIT	080H.7
P3_5	BIT	0B0H.5
ES	BIT	0A8H.4
P2_6	BIT	0A0H.6
P1_7	BIT	090H.7
P3_6	BIT	0B0H.6
P2_7	BIT	0A0H.7
IP	DATA	0B8H
P3_7	BIT	0B0H.7
RI	BIT	098H.0
CY	BIT	0D0H.7
INT0	BIT	0B0H.2
INT1	BIT	0B0H.3
TI	BIT	098H.1
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
T2EX	BIT	090H.1
OV	BIT	0D0H.2
RCAP2L	DATA	0CAH
C_T2	BIT	0C8H.1
WR	BIT	0B0H.6
RCLK	BIT	0C8H.5
TCLK	BIT	0C8H.4
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
CP_RL2	BIT	0C8H.0
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
TF1	BIT	088H.7
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
EX1	BIT	0A8H.2
TB8	BIT	098H.3
IT1	BIT	088H.2
TH2	DATA	0CDH
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
TL2	DATA	0CCH
PT0	BIT	0B8H.1
RS0	BIT	0D0H.3
PT1	BIT	0B8H.3
RS1	BIT	0D0H.4
PT2	BIT	0B8H.5
TR0	BIT	088H.4
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
REN	BIT	098H.4
T2MOD	DATA	0C9H
T2CON	DATA	0C8H
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
F1	BIT	0D0H.1
PSW	DATA	0D0H
?PR?_delayms?INDEPENDENTKEY              SEGMENT CODE 
?PR?Light?INDEPENDENTKEY                 SEGMENT CODE 
?PR?main?INDEPENDENTKEY                  SEGMENT CODE 
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	main
	PUBLIC	Light
	PUBLIC	_delayms
; #include<regx52.h>
; 
; #define KEY_0 P1_0//按键IO口
; #define KEY_1 P1_2
; #define KEY_2 P1_4
; #define KEY_3 P1_6
; 
; #define LED_0 P0_0//LED的IO口
; #define LED_1 P0_1
; #define LED_2 P0_2
; #define LED_3 P0_3
; 
; void delayms(int xms){

	RSEG  ?PR?_delayms?INDEPENDENTKEY
_delayms:
	USING	0
			; SOURCE LINE # 13
;---- Variable 'xms?040' assigned to Register 'R6/R7' ----
; 	int i, j;
; 	for(i = xms; i > 0; i--)
			; SOURCE LINE # 15
;---- Variable 'i?041' assigned to Register 'R6/R7' ----
?C0001:
	SETB 	C
	MOV  	A,R7
	SUBB 	A,#00H
	MOV  	A,R6
	XRL  	A,#080H
	SUBB 	A,#080H
	JC   	?C0007
; 		for(j = 110; j > 0; j--);
			; SOURCE LINE # 16
;---- Variable 'j?042' assigned to Register 'R4/R5' ----
	MOV  	R5,#06EH
	MOV  	R4,#00H
?C0004:
	MOV  	A,R5
	DEC  	R5
	JNZ  	?C0019
	DEC  	R4
?C0019:
	MOV  	A,R5
	ORL  	A,R4
	JNZ  	?C0004
?C0003:
	MOV  	A,R7
	DEC  	R7
	JNZ  	?C0001
	DEC  	R6
?C0020:
	SJMP 	?C0001
; }
			; SOURCE LINE # 17
?C0007:
	RET  	
; END OF _delayms

; 
; void Light(){

	RSEG  ?PR?Light?INDEPENDENTKEY
Light:
	USING	0
			; SOURCE LINE # 19
; 	if(KEY_0 == 0){
			; SOURCE LINE # 20
	JB   	P1_0,?C0008
; 		LED_0 = !LED_0;
			; SOURCE LINE # 21
	CPL  	P0_0
; 		delayms(500);
			; SOURCE LINE # 22
; 		
; 	}else if(KEY_1 == 0){
			; SOURCE LINE # 24
	SJMP 	?C0023
?C0008:
	JB   	P1_2,?C0010
; 		LED_1 = !LED_1;
			; SOURCE LINE # 25
	CPL  	P0_1
; 		delayms(500);
			; SOURCE LINE # 26
?C0021:
; 		
; 	}else if(KEY_2 == 0){
			; SOURCE LINE # 28
	SJMP 	?C0023
?C0010:
	JB   	P1_4,?C0012
; 		LED_2 = !LED_2;
			; SOURCE LINE # 29
	CPL  	P0_2
; 		delayms(500);
			; SOURCE LINE # 30
?C0022:
; 		
; 	}else if(KEY_3 == 0){
			; SOURCE LINE # 32
	SJMP 	?C0023
?C0012:
	JB   	P1_6,?C0015
; 		LED_3 = !LED_3;
			; SOURCE LINE # 33
	CPL  	P0_3
; 		delayms(500);
			; SOURCE LINE # 34
?C0023:
	MOV  	R7,#0F4H
	MOV  	R6,#01H
	LCALL	_delayms
; 	}
			; SOURCE LINE # 35
; }
			; SOURCE LINE # 36
?C0015:
	RET  	
; END OF Light

; 
; void main(){

	RSEG  ?PR?main?INDEPENDENTKEY
main:
	USING	0
			; SOURCE LINE # 38
?C0016:
; 	while(1){
			; SOURCE LINE # 39
; 		Light();
			; SOURCE LINE # 40
	LCALL	Light
; 	}
			; SOURCE LINE # 41
	SJMP 	?C0016
; END OF main

	END

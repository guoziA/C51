C51 COMPILER V9.52.0.0   MOTOR                                                             03/06/2016 13:03:36 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN motor.OBJ
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE motor.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "motor.h";
   2          #include<regx52.h>
   3          
   4          //n=60/（T*20）
   5          //T = 3/n (s) = 3000/n (ms)
   6          //T/4 = 750/n (ms)
   7          //(T/4)max = 750/240 = 3.125 (ms)
   8          //设置中断时间为 0.5 ms
   9          //方向 0 表示正D， 1 表示反C
  10          
  11          
  12          //p14 - motor_a
  13          //p15 - motor_b
  14          //p16 - motor_c
  15          //p17 - motor_d
  16          
  17          #define MOTOR_A P1_4
  18          #define MOTOR_B P1_5
  19          #define MOTOR_C P1_6
  20          #define MOTOR_D P1_7
  21          
  22          int current_t_over_4, set_t_over_4, j_m = 0, T_m;
  23          char i_m = 100, s_m = 1, sc_c = 0;
  24          
  25          char speed_change(int current_v, char current_d, int set_v, char set_d){
  26   1              
  27   1              //减慢加速度
  28   1      //      sc_c++;
  29   1      //      if(sc_c % 20 != 0){
  30   1      //              return -1;
  31   1      //      }
  32   1      //      sc_c = 0;
  33   1                      
  34   1              //速度和方向都不变
  35   1              if(current_v == set_v && current_d == set_d){
  36   2                      return -1;
  37   2              }
  38   1      
  39   1              if(current_v == 0 && set_v == 0){
  40   2                      P1 = 0XF0; //停电机
  41   2                      return 0;
  42   2              }
  43   1              else if(current_v != 0 && set_v == 0){
  44   2                      P1 = 0XF0; //停电机
  45   2                      return 0;
  46   2              }
  47   1              else{
  48   2                      if(current_v == 0){
  49   3                              current_v = 1;
  50   3                      }
  51   2                      current_t_over_4 = 750 * 2 / current_v;
  52   2                      set_t_over_4 = 750 * 2 / set_v;
  53   2      
  54   2                      //方向不变变速度
  55   2                      if(current_d == set_d){
C51 COMPILER V9.52.0.0   MOTOR                                                             03/06/2016 13:03:36 PAGE 2   

  56   3                              if(current_t_over_4 < set_t_over_4){
  57   4                                      current_t_over_4++;
  58   4                              }
  59   3                              else{
  60   4                                      current_t_over_4--;
  61   4                                      
  62   4                              }
  63   3                      }
  64   2                      //方向改变变速度
  65   2                      else if(current_d != set_d){
  66   3                              
  67   3                              if(current_t_over_4 < 1500){
  68   4                                      current_t_over_4++;
  69   4                              }
  70   3                              //到1转每分就停机
  71   3                              else if(current_t_over_4 == 1500){
  72   4                                      P1 = 0XF0; //停电机
  73   4                                      //延时等待电机停止 
  74   4                                      while(i_m--);
  75   4                                      current_d = set_d;
  76   4                              }
  77   3                      }
  78   2                      return 750 * 2 / current_t_over_4;
  79   2              }
  80   1      }
  81          
  82          
  83          char is_speed_changed(int current_v, char current_d, int set_v, char set_d){
  84   1                      //速度和方向都不变
  85   1              if(current_v == set_v && current_d == set_d){
  86   2                      return 0;
  87   2              }
  88   1              return 1;
  89   1      }
  90          
  91          //定时中断中，0.5ms进入一次此函数， 每T * 0.5ms状态改变一次
  92          
  93          
  94          void motor_run(int current_v, char current_d){
  95   1              
  96   1              j_m++;
  97   1              
  98   1              T_m = 750 * 2 / current_v;
  99   1              if(j_m % T_m != 0){
 100   2                      return;
 101   2              }
 102   1              
 103   1              //改变电机状态
 104   1              if(current_d == 0){
 105   2                      s_m++;
 106   2              }
 107   1              else if(current_d == 1){
 108   2                      s_m--;
 109   2              }
 110   1              switch(s_m){
 111   2                      case 1:
 112   2                              MOTOR_D = 0;
 113   2                              MOTOR_B = 1;
 114   2                              if(current_d == 1){
 115   3                                      s_m = 5;
 116   3                              }
 117   2                              break;
C51 COMPILER V9.52.0.0   MOTOR                                                             03/06/2016 13:03:36 PAGE 3   

 118   2                      case 2:
 119   2                              MOTOR_C = 0;
 120   2                              MOTOR_A = 1;
 121   2                              break;
 122   2                      case 3:
 123   2                              MOTOR_B = 0;
 124   2                              MOTOR_D = 1;
 125   2                              break;
 126   2                      case 4:
 127   2                              MOTOR_A = 0;
 128   2                              MOTOR_C = 1;
 129   2                              if(current_d == 0){
 130   3                                      s_m = 0;
 131   3                              }
 132   2                              break;
 133   2              }
 134   1      }
 135          
 136          
 137          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    301    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
